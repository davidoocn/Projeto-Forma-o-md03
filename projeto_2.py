# -*- coding: utf-8 -*-
"""PROJETO 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T5Wod4cOt_c7aZxZqup8oVclKJDHaxPI

PROJETO 2: SISTEMA BANCÁRIO.

0. Encerrar o sistema.
1. Um menu de seleção de operação.
2. Criação de contas.
3. Remoção de contas.
4. Listagem de todas as contas criadas.
5. Adicionar saldo/Remover saldo.
6. Transferir valores entre contas.
7. Consultar saldo de uma conta específica.
"""

#SISTEMA BANCÁRIO
contas = []
def criar_conta():
  verificador_conta_existe = False
  dados_nova_conta = {}
  dados_nova_conta['numero_conta'] = input('Digite o número da nova conta:\n>>> ')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == dados_nova_conta['numero_conta']:
      verificador_conta_existe = True
      break
  if verificador_conta_existe == True:
    print('Número de conta já existe. Tente novamente.')
  else:
    dados_nova_conta['saldo_conta'] = float (input('Digite o saldo da nova conta:\n>>> '))
    contas.append(dados_nova_conta)
    print('\nOperação efetuada com sucesso')
def remover_conta():
  numero_conta = input('Digite a conta a ser removida. \n>>>')
  conta_encontrada = False
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      conta_encontrada = True
      contas.remove(conta_em_consulta)
      print('\nOperação efetuada com sucesso')
      break
  if not conta_encontrada:
    print('\nConta não existente. Tente novamente')
def listar_conta():
  if len(contas) == 0:
    print('\nNão há contas cadastradas.')
  else:
    index = 1
    for conta_em_consulta in contas:

      if conta_em_consulta['saldo_conta'] >= 0:
          status = 'Positivo'
      else:
        status = 'Negativo'
      print(f'{index}- Número da conta: {conta_em_consulta["numero_conta"]} | Saldo da conta:{conta_em_consulta["saldo_conta"]} - {(status)}')
    index += 1
def adicionar_saldo_em_conta():
  numero_conta = input('Digite o número da conta \n>>>')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_credito = float(input('Digite o valor a ser creditado\n>>> R$'))
      if valor_credito < 0:
        print('\nValores negativos não são permitidos. Tente novamente')
        return
      else:
        conta_em_consulta['saldo_conta'] += valor_credito
        print('\nOperação efetuada com sucesso')
        return
def remover_saldo_em_conta():
  numero_conta = input('Digite o número da conta \n>>>')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_debito = float(input('Digite o valor a ser debitado\n>>> R$'))
      if valor_debito < 0:
        print('\nValores negativos não são permitidos. Tente novamente')
        return
      else:
        conta_em_consulta['saldo_conta'] -= valor_debito
        print('\nOperação efetuada com sucesso')
        return
  #Pode deixar o valor_debito negativo, pois quando for realizar a diminuição com o '-=' vai efetuar a operação.
def tranferir_saldo_entre_contas():
  conta_partida = input('Digite o número da sua conta:\n>>>')
  verificador_etapa = 0
  #Procurar a primeira conta
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == conta_partida:
      verificador_etapa = 1
      conta_destino = input('Digite o número da conta destino:\n>>>')
      #verificar se é a mesma conta
      if conta_destino != conta_partida:
      #procurar a segunda conta
        for conta_destino_em_consulta in contas:
          if conta_destino_em_consulta['numero_conta'] == conta_destino:
            verificador_etapa = 3
            valor_transferencia = float(input('Digite o valor da trasnferência:\n>>>'))
            #Verificar se o valor é negativo
            if valor_transferencia < 0:
              print('\nNão é possível transferir um valor netativo.')
              break
            #Verificar se o saldo é positivo
            elif valor_transferencia > conta_em_consulta['saldo_conta']:
             print('\nNão é possível transferir um valor maior do que o seu saldo. Tente novamente.')
             break
            else:
              conta_em_consulta['saldo_conta'] -= valor_transferencia
              conta_destino_em_consulta['saldo_conta'] += valor_transferencia
              print('\nOperação efetuada com sucesso.')
              break

      else:
        verificador_etapa = 2
        break
  if verificador_etapa == 0:
    print('\nA sua conta não foi encontrada. Tente novamente.')
  elif verificador_etapa == 1:
    print('\nA conta de destino não foi encontrada. Tente novamente.')
  elif verificador_etapa == 2:
    print('\nNão é possível transferir dinheiro para a mesma conta.')

def consultar_saldo_de_uma_conta():
  numero_conta = input('Digite do número da conta para consultar o saldo:\n>>>')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      for conta_em_consulta in contas:
        if conta_em_consulta['saldo_conta'] >= 0:
          status = 'Positivo'
        else:
          status = 'Negativo'
        print(f"\nO saldo é: {conta_em_consulta['saldo_conta']:.2f} ({status})")
        return

  print('\nNúmero da conta não foi encontrado. Tente novamente')

print(">>> Bem-vindo ao sistema bancário <<<")
# '\n' BARRA e o N significa quebrar uma linha, e escrever na linha de baixo
while True:
  print("\n### Menu ### ")
  print("0 - Sair ")
  print("1 - Criar uma nova conta ")
  print("2 - Remover uma conta ")
  print("3 - Listagem de todas as contas criadas ")
  print("4 - Adicionar saldo")
  print("5 - Remover saldo")
  print("6 - Transferir saldo entre contas")
  print("7 - Consultar saldo de uma conta")
  numero_operacao = input('Seleciona a operação que deseja realizar:\n>>> ')


  if numero_operacao == "0":
    print('\nSistema encerrado')
    break

  #Operação 1 - Criar conta
  elif numero_operacao == "1":
    criar_conta()

 #Operação 2- Remoção de conta
  elif numero_operacao == "2":
    remover_conta()

#Operação 3- Listar conta
  elif numero_operacao == "3":
    listar_conta()
#Operação 4- adicionar saldo da conta
  elif numero_operacao == "4":
    adicionar_saldo_em_conta()
#Operação 5- Remover saldo da conta
  elif numero_operacao == "5":
    remover_saldo_em_conta()
#Operação 6- Remover saldo da conta
  elif numero_operacao == "6":
    tranferir_saldo_entre_contas()
#Operação 7- Remover saldo da conta
  elif numero_operacao == "7":
    consultar_saldo_de_uma_conta()




  else:
   print('\nOperação inválida.')